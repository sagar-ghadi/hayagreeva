export const Certificate: any;
export const DiffieHellman: any;
export const DiffieHellmanGroup: any;
export const Hash: any;
export const Hmac: any;
export const KeyObject: any;
export const X509Certificate: any;
export const checkPrime: any;
export const checkPrimeSync: any;
export const createDiffieHellman: any;
export const createDiffieHellmanGroup: any;
export const createHash: any;
export const createHmac: any;
export const createPrivateKey: any;
export const createPublicKey: any;
export const createSecretKey: any;
export const generateKey: any;
export const generateKeyPair: any;
export const generateKeyPairSync: any;
export const generateKeySync: any;
export const generatePrime: any;
export const generatePrimeSync: any;
export const getCiphers: any;
export const getCurves: any;
export const getDiffieHellman: any;
export const getFips: any;
export const getHashes: any;
export const hkdf: any;
export const hkdfSync: any;
export const pbkdf2: any;
export const pbkdf2Sync: any;
export const randomBytes: any;
export const randomFill: any;
export const randomFillSync: any;
export const randomInt: any;
export const randomUUID: any;
export const scrypt: any;
export const scryptSync: any;
export const secureHeapUsed: any;
export const setEngine: any;
export const setFips: any;
export const subtle: any;
export const timingSafeEqual: any;
export const fips: any;
export const Sign: any;
export const Verify: any;
export const createSign: any;
export const createVerify: any;
export const sign: any;
export const verify: any;
export const getRandomValues: any;
export namespace webcrypto {
    export let CryptoKey: any;
    export { getRandomValues };
    export { randomUUID };
    export { subtle };
}
declare namespace _default {
    export { Certificate };
    export { Cipher };
    export { Cipheriv };
    export { Decipher };
    export { Decipheriv };
    export { ECDH };
    export { Sign };
    export { Verify };
    export { X509Certificate };
    export { constants };
    export { createCipheriv };
    export { createDecipheriv };
    export { createECDH };
    export { createSign };
    export { createVerify };
    export { diffieHellman };
    export { getCipherInfo };
    export { hash };
    export { privateDecrypt };
    export { privateEncrypt };
    export { publicDecrypt };
    export { publicEncrypt };
    export { scrypt };
    export { scryptSync };
    export { sign };
    export { verify };
    export { createCipher };
    export { createDecipher };
    export { pseudoRandomBytes };
    export { DiffieHellman };
    export { DiffieHellmanGroup };
    export { Hash };
    export { Hmac };
    export { KeyObject };
    export { checkPrime };
    export { checkPrimeSync };
    export { createDiffieHellman };
    export { createDiffieHellmanGroup };
    export { createHash };
    export { createHmac };
    export { createPrivateKey };
    export { createPublicKey };
    export { createSecretKey };
    export { generateKey };
    export { generateKeyPair };
    export { generateKeyPairSync };
    export { generateKeySync };
    export { generatePrime };
    export { generatePrimeSync };
    export { getCiphers };
    export { getCurves };
    export { getDiffieHellman };
    export { getFips };
    export { getHashes };
    export { getRandomValues };
    export { hkdf };
    export { hkdfSync };
    export { pbkdf2 };
    export { pbkdf2Sync };
    export { randomBytes };
    export { randomFill };
    export { randomFillSync };
    export { randomInt };
    export { randomUUID };
    export { secureHeapUsed };
    export { setEngine };
    export { setFips };
    export { subtle };
    export { timingSafeEqual };
    export { fips };
    export { webcrypto };
}
export default _default;
